#include<iostream>
using namespace std;

int main()
{
	//----------2.18-----------------
	//编写代码分别更改指针的值以及指针所指对象的值
	//int i = 40, i2 = 50;
	//int *p = &i; //p是指向i的int型指针
	//p = &i2;//p现在指向i2
	//cout << *p <<endl;
	//*p = 10;//i2的值被改为10
	//cout << i2 <<endl;

	//----------------2.19-----------------------
	/*引用不是一个对象，只是为一个已经存在的对象所起的另外一个名字
	 *定义一个引用后对其进行的所有操作都是在与之绑定的对象上进行。
	 *指针本身就是一个对象，在内存中有自己的地址，可以被复制、拷贝和引用。
	 */

	//----------------2.20-----------------------------
	//int i = 42;
	//int *p1 = &i;//*p1=42
	//*p1 = *p1 * *p1;//42*42
	//cout << *p1 << endl;

	//--------------2.21------------------------
	//int i = 0;
	////double *dp = &i;//错误：类型不匹配
	////int *ip = i;//语法错误
	//int *p = &i;//正确：p是指向i的int型指针

	//---------------2.24------------------------
	int i = 42;
	void *p = &i;//正确：void*是一种特殊的指针，可以存放任意对象的地址
	//cout << *p; //错误：不能直接操作void*指针所指的对象
	//long *lp = &i;//错误：lp是long型的指针，不能用int型指针初始化

	return 0;
}